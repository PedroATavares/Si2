//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestesSI2Entities : DbContext
    {
        public TestesSI2Entities()
            : base("name=TestesSI2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AluguerEquipamento> AluguerEquipamentos { get; set; }
        public virtual DbSet<PrecoAluguer> PrecoAluguers { get; set; }
        public virtual DbSet<Tipo> Tipoes { get; set; }
        public virtual DbSet<Aluguer> Aluguers { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Empregado> Empregadoes { get; set; }
        public virtual DbSet<Equipamento> Equipamentos { get; set; }
        public virtual DbSet<Promoco> Promocoes { get; set; }
        public virtual DbSet<Aluguer1> Aluguer1 { get; set; }
        public virtual DbSet<Cliente1> Cliente1 { get; set; }
        public virtual DbSet<Empregado1> Empregado1 { get; set; }
        public virtual DbSet<Equipamentos1> Equipamentos1 { get; set; }
        public virtual DbSet<Promocoes1> Promocoes1 { get; set; }
    
        public virtual int alteracoesPrecario(Nullable<System.DateTime> validadeI, Nullable<System.DateTime> validadeF, Nullable<int> duracao, Nullable<decimal> valor, Nullable<int> equipId)
        {
            var validadeIParameter = validadeI.HasValue ?
                new ObjectParameter("ValidadeI", validadeI) :
                new ObjectParameter("ValidadeI", typeof(System.DateTime));
    
            var validadeFParameter = validadeF.HasValue ?
                new ObjectParameter("ValidadeF", validadeF) :
                new ObjectParameter("ValidadeF", typeof(System.DateTime));
    
            var duracaoParameter = duracao.HasValue ?
                new ObjectParameter("duracao", duracao) :
                new ObjectParameter("duracao", typeof(int));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var equipIdParameter = equipId.HasValue ?
                new ObjectParameter("EquipId", equipId) :
                new ObjectParameter("EquipId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("alteracoesPrecario", validadeIParameter, validadeFParameter, duracaoParameter, valorParameter, equipIdParameter);
        }
    
        public virtual int DeleteCliente(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCliente", idParameter);
        }
    
        public virtual int DeleteEquipamentos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEquipamentos", idParameter);
        }
    
        public virtual int DeletePromocoes(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePromocoes", idParameter);
        }
    
        public virtual ObjectResult<EquipamentosSemAluguerUltimaSemana_Result> EquipamentosSemAluguerUltimaSemana()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EquipamentosSemAluguerUltimaSemana_Result>("EquipamentosSemAluguerUltimaSemana");
        }
    
        public virtual int InserirAluguerComCliente(Nullable<System.DateTime> dataI, Nullable<System.DateTime> dataF, Nullable<int> duracao, Nullable<int> numEmp, Nullable<int> codCli, ObjectParameter id)
        {
            var dataIParameter = dataI.HasValue ?
                new ObjectParameter("DataI", dataI) :
                new ObjectParameter("DataI", typeof(System.DateTime));
    
            var dataFParameter = dataF.HasValue ?
                new ObjectParameter("DataF", dataF) :
                new ObjectParameter("DataF", typeof(System.DateTime));
    
            var duracaoParameter = duracao.HasValue ?
                new ObjectParameter("Duracao", duracao) :
                new ObjectParameter("Duracao", typeof(int));
    
            var numEmpParameter = numEmp.HasValue ?
                new ObjectParameter("NumEmp", numEmp) :
                new ObjectParameter("NumEmp", typeof(int));
    
            var codCliParameter = codCli.HasValue ?
                new ObjectParameter("CodCli", codCli) :
                new ObjectParameter("CodCli", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserirAluguerComCliente", dataIParameter, dataFParameter, duracaoParameter, numEmpParameter, codCliParameter, id);
        }
    
        public virtual int InserirAluguerSemCliente(Nullable<int> nif, string nome, string morada, ObjectParameter idCliente, Nullable<int> duracao, Nullable<int> numEmp, Nullable<System.DateTime> dataI, Nullable<System.DateTime> dataF, ObjectParameter idAluguer)
        {
            var nifParameter = nif.HasValue ?
                new ObjectParameter("Nif", nif) :
                new ObjectParameter("Nif", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("Morada", morada) :
                new ObjectParameter("Morada", typeof(string));
    
            var duracaoParameter = duracao.HasValue ?
                new ObjectParameter("Duracao", duracao) :
                new ObjectParameter("Duracao", typeof(int));
    
            var numEmpParameter = numEmp.HasValue ?
                new ObjectParameter("NumEmp", numEmp) :
                new ObjectParameter("NumEmp", typeof(int));
    
            var dataIParameter = dataI.HasValue ?
                new ObjectParameter("DataI", dataI) :
                new ObjectParameter("DataI", typeof(System.DateTime));
    
            var dataFParameter = dataF.HasValue ?
                new ObjectParameter("DataF", dataF) :
                new ObjectParameter("DataF", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserirAluguerSemCliente", nifParameter, nomeParameter, moradaParameter, idCliente, duracaoParameter, numEmpParameter, dataIParameter, dataFParameter, idAluguer);
        }
    
        public virtual int InsertCliente(Nullable<int> nIF, string nome, string morada, ObjectParameter id)
        {
            var nIFParameter = nIF.HasValue ?
                new ObjectParameter("NIF", nIF) :
                new ObjectParameter("NIF", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCliente", nIFParameter, nomeParameter, moradaParameter, id);
        }
    
        public virtual int InsertEquipamentos(string descr, string tipo, ObjectParameter toRet)
        {
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEquipamentos", descrParameter, tipoParameter, toRet);
        }
    
        public virtual int InsertPromocoes(Nullable<System.DateTime> dataInicio, Nullable<System.DateTime> dataFim, string descricao, ObjectParameter id)
        {
            var dataInicioParameter = dataInicio.HasValue ?
                new ObjectParameter("DataInicio", dataInicio) :
                new ObjectParameter("DataInicio", typeof(System.DateTime));
    
            var dataFimParameter = dataFim.HasValue ?
                new ObjectParameter("DataFim", dataFim) :
                new ObjectParameter("DataFim", typeof(System.DateTime));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("Descricao", descricao) :
                new ObjectParameter("Descricao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPromocoes", dataInicioParameter, dataFimParameter, descricaoParameter, id);
        }
    
        public virtual ObjectResult<listarEquipamentos_Result> listarEquipamentos(Nullable<System.DateTime> validadeI, Nullable<System.DateTime> validadeF, string tipo)
        {
            var validadeIParameter = validadeI.HasValue ?
                new ObjectParameter("ValidadeI", validadeI) :
                new ObjectParameter("ValidadeI", typeof(System.DateTime));
    
            var validadeFParameter = validadeF.HasValue ?
                new ObjectParameter("ValidadeF", validadeF) :
                new ObjectParameter("ValidadeF", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listarEquipamentos_Result>("listarEquipamentos", validadeIParameter, validadeFParameter, tipoParameter);
        }
    
        public virtual int RemoverAluger(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoverAluger", idParameter);
        }
    
        public virtual int UpdateCliente(Nullable<int> id, Nullable<int> nIF, string nome, string morada)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nIFParameter = nIF.HasValue ?
                new ObjectParameter("NIF", nIF) :
                new ObjectParameter("NIF", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCliente", idParameter, nIFParameter, nomeParameter, moradaParameter);
        }
    
        public virtual int UpdateEquipamentos(Nullable<int> id, string descr, string tipo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEquipamentos", idParameter, descrParameter, tipoParameter);
        }
    
        public virtual int UpdatePromocoes(Nullable<int> id, Nullable<System.DateTime> dataInicio, Nullable<System.DateTime> dataFim, string descricao)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dataInicioParameter = dataInicio.HasValue ?
                new ObjectParameter("DataInicio", dataInicio) :
                new ObjectParameter("DataInicio", typeof(System.DateTime));
    
            var dataFimParameter = dataFim.HasValue ?
                new ObjectParameter("DataFim", dataFim) :
                new ObjectParameter("DataFim", typeof(System.DateTime));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("Descricao", descricao) :
                new ObjectParameter("Descricao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePromocoes", idParameter, dataInicioParameter, dataFimParameter, descricaoParameter);
        }
    }
}
